# Code is heavily referenced from https://github.com/pyesonekyaw/CZ3004-SC2079-MDP-ImageRecognition
from flask import Flask, request, jsonify
from flask_cors import CORS
from model import *

app = Flask(__name__)
CORS(app)
model = load_model()

# URL for checking connection, returns a json if successful
@app.route('/status', methods=['GET'])
def status():
    return jsonify({"result": "ok"})

# URL for imgae recognition, returns a json with the predicted id
@app.route('/image', methods=['POST'])
def image_predict():
    file = request.files['file']
    filename = file.filename
    file.save(os.path.join('uploads', filename))
    # Uncomment below for task 1
    '''
    ## task 1 ## 
    # filename format: "<timestamp>_<obstacle_id>.jpeg"
    constituents = file.filename.split("_")
    obstacle_id = constituents[1].strip(".jpg")
    image_id = predict_image(filename, model)

    result = {
        "obstacle_id": obstacle_id,
        "image_id": image_id
    }
    
    '''
    # Uncomment below for task 2
    
    ## task 2 ## 
    image_id = predict_image_task_2(filename, model)

    result = {
        "image_id": image_id
    }
    return jsonify(result)
    
# URL for stitich. Returns a json if successful. Display stitched image on computer.
@app.route('/stitch', methods=['GET'])
def stitch():
    img = stitch_image()
    img.show()
    return jsonify({"result": "ok"})

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000, debug=True)
